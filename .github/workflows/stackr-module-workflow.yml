name: GitHub Actions For StackrModule
run-name: ${{ github.actor }} is running the workflow to push the latest code into the Terraform Module Registry
on:
  push:
    branches:
      - main
env:
  REGO_DIR: /home/runner/work/stackrModule/stackrModule/stackrOpa
jobs:
  StackrModule-Build-Cucumber-And-Docs:
    name: Build Cucumber And Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        run: |
          az login --service-principal -u a70d566a-f0cb-44d5-8608-4a3647bdac07 -p=-dk8Q~h6b6_cJHP-bjpL-0hdNwsbb2mzexmcebE9 --tenant ac727e63-2ec2-4956-82b6-e061eb3cca16
      #- uses: azure/login@v1
      #  with:
          #creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Print context info
        run: | 
          echo "The job was automatically triggered by a ${{ github.event_name }} event."
          echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
          echo "The ${{ github.repository }} repository has been cloned to the runner."
          echo "The workflow is now ready to test your code on the runner."

      - name: Checkout repository code
        uses: actions/checkout@v3
        with:
          repository: tunix78/stackrModule

          path: stackrModule
      - name: Checkout stackrOpa
        uses: actions/checkout@v3
        with:
          repository: tunix78/stackrOpa
          token: ${{ secrets.STACKR_OPA_ACCESS_PAT }}
          path: stackrOpa

      - name: Checkout stackrTools
        uses: actions/checkout@v3
        with:
          repository: tunix78/stackrTools
          token: ${{ secrets.STACKR_TOOLS_ACCESS_PAT }}
          path: stackrTools

      - name: List files in the repository post checkout
        run: |
          ls -R ${{ github.workspace }}

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
          check-latest: true

      - name: Init and Tidy
        run: |
          cd stackrModule/test/resourceGroup
          go version
          # go mod init github.com/tunix78/stackrModule
          # go mod tidy

      - name: Test
        continue-on-error: true
        run: |
          cd stackrModule/test/resourceGroup
          mkdir -p results
          go test -v --godog.random --godog.format=cucumber:results/cucumber.json

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 18.15.0

      - name: Install cucumber-html-reporter
        run: npm install cucumber-html-reporter --save-dev

      - name: Create html reports
        run: |
          cd stackrModule/test
          node index.js

      - name: Do the Sphinx Build
        uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "stackrModule/docs/"

      - name: List files in the repository post build
        run: |
          mv stackrModule/test/resourceGroup/plan.json stackrModule/test/resourceGroup/plan.json_orig
          cat stackrModule/test/resourceGroup/plan.json_orig | jq > stackrModule/test/resourceGroup/plan.json
          cat stackrModule/test/resourceGroup/plan.json
          ls -R ${{ github.workspace }}

      - name: Upload cucumber reports and cucumber json to data store and timestamp, version them
        # alternative here is to use the stackrUploadToStorageAccount.py script in stackrTools
        # TODO rename the resulting html and json files to prefix the specific test case file before uploading
        uses: azure/CLI@v1
        with:
          inlineScript: |
              az storage blob upload-batch --overwrite --account-name svensappstorage --auth-mode key -d '$web/docs/stackrModule/resourceGroup' -s stackrModule/docs/build/html/
              az storage blob upload-batch --overwrite --account-name svensappstorage --auth-mode key -d '$web/cucumber-results/stackrModule/resourceGroup' -s stackrModule/test/resourceGroup/results

      - name: Upload documents to evidencing store
        run: |
          cd stackrTools/src
          python -m venv .
          pip install -r requirements.txt
          python stackrUploadToEvidenceStore.py -m stackrModule -s resourceGroup -o stackrstore.icriak4.mongodb.net -p ${{ secrets.MONGODB_SECRET }} -b /home/runner/work/stackrModule/stackrModule -c stackrModule/test/resourceGroup/results/cucumber.json -d bla -t stackrModule/test/resourceGroup/plan.json

      - name: Print job status
        run: |
          echo "This job's status is ${{ job.status }}."
      - name: logout
        run: |
              az logout
        if: always()





  # Azure logout
